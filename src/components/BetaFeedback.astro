---
// BETA Feedback Component
---

<div id="betaFeedback" class="fixed bottom-4 right-4 z-50">
  <!-- Feedback Button -->
  <button
    id="feedbackBtn"
    class="bg-blue-600 hover:bg-blue-700 text-white px-4 py-2 rounded-full shadow-lg transition-colors duration-200 flex items-center space-x-2"
  >
    <svg class="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
      <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M8 12h.01M12 12h.01M16 12h.01M21 12c0 4.418-4.03 8-9 8a9.863 9.863 0 01-4.255-.949L3 20l1.395-3.72C3.512 15.042 3 13.574 3 12c0-4.418 4.03-8 9-8s9 3.582 9 8z"></path>
    </svg>
    <span class="hidden sm:inline">BETA Feedback</span>
  </button>

  <!-- Feedback Modal -->
  <div
    id="feedbackModal"
    class="hidden fixed inset-0 bg-black bg-opacity-50 z-50 flex items-center justify-center p-4"
  >
    <div class="bg-white rounded-lg shadow-xl max-w-md w-full max-h-[90vh] overflow-y-auto">
      <div class="p-6">
        <!-- Header -->
        <div class="flex justify-between items-center mb-4">
          <h3 class="text-lg font-semibold text-gray-900">BETA Feedback</h3>
          <button
            id="closeModal"
            class="text-gray-400 hover:text-gray-600 transition-colors"
          >
            <svg class="w-6 h-6" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12"></path>
            </svg>
          </button>
        </div>

        <!-- Feedback Form -->
        <form id="feedbackForm" class="space-y-4">
          <!-- Name -->
          <div>
            <label for="feedbackName" class="block text-sm font-medium text-gray-700 mb-1">
              Name (Optional)
            </label>
            <input
              type="text"
              id="feedbackName"
              name="name"
              class="w-full px-3 py-2 border border-gray-300 rounded-md focus:ring-2 focus:ring-blue-500 focus:border-blue-500"
              placeholder="Your name"
            />
          </div>

          <!-- Email -->
          <div>
            <label for="feedbackEmail" class="block text-sm font-medium text-gray-700 mb-1">
              Email (Optional)
            </label>
            <input
              type="email"
              id="feedbackEmail"
              name="email"
              class="w-full px-3 py-2 border border-gray-300 rounded-md focus:ring-2 focus:ring-blue-500 focus:border-blue-500"
              placeholder="your@email.com"
            />
          </div>

          <!-- Feedback Type -->
          <div>
            <label for="feedbackType" class="block text-sm font-medium text-gray-700 mb-1">
              Feedback Type
            </label>
            <select
              id="feedbackType"
              name="type"
              class="w-full px-3 py-2 border border-gray-300 rounded-md focus:ring-2 focus:ring-blue-500 focus:border-blue-500"
              required
            >
              <option value="">Select feedback type</option>
              <option value="bug">Bug Report</option>
              <option value="feature">Feature Request</option>
              <option value="improvement">Improvement Suggestion</option>
              <option value="general">General Feedback</option>
            </select>
          </div>

          <!-- Message -->
          <div>
            <label for="feedbackMessage" class="block text-sm font-medium text-gray-700 mb-1">
              Message *
            </label>
            <textarea
              id="feedbackMessage"
              name="message"
              rows="4"
              class="w-full px-3 py-2 border border-gray-300 rounded-md focus:ring-2 focus:ring-blue-500 focus:border-blue-500"
              placeholder="Please describe your feedback, bug report, or suggestion..."
              required
            ></textarea>
          </div>

          <!-- Submit Button -->
          <div class="flex justify-end space-x-3">
            <button
              type="button"
              id="cancelFeedback"
              class="px-4 py-2 text-gray-700 bg-gray-100 hover:bg-gray-200 rounded-md transition-colors"
            >
              Cancel
            </button>
            <button
              type="submit"
              class="px-4 py-2 bg-blue-600 hover:bg-blue-700 text-white rounded-md transition-colors"
            >
              Send Feedback
            </button>
          </div>
        </form>

        <!-- Success Message -->
        <div id="successMessage" class="hidden mt-4 p-4 bg-green-100 border border-green-400 text-green-700 rounded-md">
          <div class="flex items-center">
            <svg class="w-5 h-5 mr-2" fill="currentColor" viewBox="0 0 20 20">
              <path fill-rule="evenodd" d="M10 18a8 8 0 100-16 8 8 0 000 16zm3.707-9.293a1 1 0 00-1.414-1.414L9 10.586 7.707 9.293a1 1 0 00-1.414 1.414l2 2a1 1 0 001.414 0l4-4z" clip-rule="evenodd"></path>
            </svg>
            Thank you for your feedback! We'll review it and get back to you soon.
          </div>
        </div>
      </div>
    </div>
  </div>
</div>

<script>
  document.addEventListener('DOMContentLoaded', function() {
    const feedbackBtn = document.getElementById('feedbackBtn');
    const feedbackModal = document.getElementById('feedbackModal');
    const closeModal = document.getElementById('closeModal');
    const cancelFeedback = document.getElementById('cancelFeedback');
    const feedbackForm = document.getElementById('feedbackForm');
    const successMessage = document.getElementById('successMessage');

    // Open modal
    feedbackBtn.addEventListener('click', function() {
      feedbackModal.classList.remove('hidden');
      document.body.style.overflow = 'hidden';
    });

    // Close modal
    function closeFeedbackModal() {
      feedbackModal.classList.add('hidden');
      document.body.style.overflow = 'auto';
      feedbackForm.reset();
      successMessage.classList.add('hidden');
    }

    closeModal.addEventListener('click', closeFeedbackModal);
    cancelFeedback.addEventListener('click', closeFeedbackModal);

    // Close modal on backdrop click
    feedbackModal.addEventListener('click', function(e) {
      if (e.target === feedbackModal) {
        closeFeedbackModal();
      }
    });

    // Handle form submission
    feedbackForm.addEventListener('submit', async function(e) {
      e.preventDefault();

      const formData = new FormData(feedbackForm);
      const feedbackData = {
        name: formData.get('name') || 'Anonymous',
        email: formData.get('email') || '',
        type: formData.get('type'),
        message: formData.get('message'),
        timestamp: new Date().toISOString(),
        url: window.location.href,
        userAgent: navigator.userAgent
      };

      try {
        // Send feedback to your API endpoint
        const response = await fetch('/api/feedback', {
          method: 'POST',
          headers: {
            'Content-Type': 'application/json',
          },
          body: JSON.stringify(feedbackData)
        });

        if (response.ok) {
          // Show success message
          successMessage.classList.remove('hidden');
          feedbackForm.classList.add('hidden');

          // Auto-close after 3 seconds
          setTimeout(() => {
            closeFeedbackModal();
          }, 3000);
        } else {
          throw new Error('Failed to send feedback');
        }
      } catch (error) {
        console.error('Error sending feedback:', error);
        alert('Sorry, there was an error sending your feedback. Please try again later.');
      }
    });
  });
</script>
